
<% content_for :pagetitle do %>
  <%= @group.name %>
<% end %>
<div class="content mdl-grid">

<div class="mdl-cell mdl-cell--12-col">
<h3>Videos</h3>

<ul>
<% if @group.videos.each do |video| %>
  <li>
    <%= link_to(video.title, video) %>
  </li>
<% end.empty? %>
    No videos shared with this group yet.
<% end %>
</ul>
</div>
<div class="mdl-layout-spacer"></div>
<div class="mdl-cell mdl-cell--4-col">
<h3>Members</h3>

<ul>
<% for membership in @group.memberships %>
  <% user = membership.user %>
  <li>
    <%= user.name %>
    <% if membership.admin? %>
      <span class="admin-badge">admin</span>
    <% end %>
  </li>
<% end %>
</ul>

<% if policy(@group).join? %>
  <%= link_to(t(:join_group), join_group_path(@group), method: :post, class: "mdl-button mdl-js-button mdl-button--raised mdl-button--colored") %>
<% end %>
<% if policy(@group).leave? %>
  <%= link_to(t(:leave_group), leave_group_path(@group), method: :post, class: "mdl-button mdl-js-button mdl-button--raised mdl-button--colored") %>
<% end %>
</div>

<% if policy(@group).invite? %>
<div class="mdl-layout-spacer"></div>

<div class="mdl-cell mdl-cell--4-col">
<h3>Invite new members</h3>

<%= form_tag(invite_group_path(@group)) do %>
    <div id="addresses">
    </div>
    <noscript>
        <% (0..9).each do |n| %>        
          <div class="mdl-textfield mdl-js-textfield">
          <%= text_field_tag 'address[#{n.to_s}]', '', placeholder: 'Add address to invite', class: "mdl-textfield__input" %>
          </div>
        <% end %>
    </noscript>
<div class="mdl-cell mdl-cell--6-col">
    <%= button_tag 'Add contacts', type: "button", id: "add_contacts_button", class: "mdl-button mdl-js-button mdl-button--raised mdl-button--colored force-hidden-no-layout" %>
</div>
<div class="mdl-cell mdl-cell--6-col">
    <%= submit_tag 'Send invites', class: "mdl-button mdl-js-button mdl-button--raised mdl-button--colored" %>
</div>
<% end %>
<% end %>
</div>
<div class="mdl-layout-spacer"></div>
<div class="mdl-cell mdl-cell--8-col">
<% unless sss # @SSS_Support(edit circles) %>
<% if policy(@group).edit? %>
  <%= link_to(t(:edit_group), edit_group_path(@group), class: "mdl-button mdl-js-button mdl-button--raised mdl-button--colored") %>
<% end %>
<% end %>

<% if policy(@group).destroy? %>
  <noscript>
    <%= link_to(t(:delete_group), @group, method: :delete, class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent") %>
  </noscript>
  <%= button_tag(t(:delete_group), id: :delete_button, class: "mdl-button mdl-js-button mdl-button--raised mdl-button--accent force-hidden-no-layout") %>

  <script>
    // @Copy-Paste(confirm delete button)
    var $delete_button = $("#delete_button");
    $delete_button.removeClass("force-hidden-no-layout")
    $delete_button.on("click", function() {
      // TODO: Material design dialog?
      // MDL didn't offer a solution when this was written
      if (confirm('<%=j t(:group_delete_confirm, group: @group.name) %>')) {
        var token = $('meta[name=csrf-token]').attr('content');;
        var http = new HTTP();
        http.globalHeader("X-CSRF-Token", token);
        http.deleteJson('', {
          success: function() {
            window.location.href = '<%=j groups_path() %>';
          }
        })
      }
    });
  </script>

<% end %>

</div>

<script>

if (typeof Android !== 'undefined') {
  var $addContactsButton = $('#add_contacts_button');
  $addContactsButton.removeClass('force-hidden-no-layout');
  $addContactsButton.on('click', function() {
    Android.openContactPicker();
  });
}

function addInviteEmail(email) {
    var $container = $("#addresses");
    $container.children().last().val(email);
    updateAddressList();
}

function makeInput() {
    var $input = $('<input type="email" class="mdl-textfield__input" placeholder="Add address to invite">');

    $input.on('input', function(e) {

        var $target = $(e.target);

        // Try to split the input into multiple whitespaces-separated addresses
        var parts = $target.val().split(/\s+/);
        if (parts.length > 1 && parts[1] != '') {

            // Keep the first address in self
            $target.val(parts[0]);

            // Make new inputs for the rest
            var $last = $target;
            for (var i = 1; i < parts.length; i++) {

                var $splitInput = makeInput();
                $splitInput.val(parts[i]);

                // Insert after each other
                $splitInput.insertAfter($last);
                $last = $splitInput;
            }

            // And select the last one created
            $last.focus();
        }

        updateAddressList();
    });
    return $input;
}

function updateAddressList() {
    var $container = $("#addresses");
    var inputs = $container.children();
    var count = inputs.length;

    if (count == 0) {
        // Add an input if there are none
        $container.append(makeInput());
    } else {

        // Remove empty inputs from the middle
        // Note: Loop doesn't check the last one
        for (var i = 0; i < count - 1; i++) {
            var input = inputs[i];
            if (input.value == '') {
                $(input).remove();

                // Focus on the previous one if the empty input is not the first
                // one, otherwise select the next one (that will replace this)
                inputs[i > 0 ? (i - 1) : (i + 1)].focus();
            }
        }

        // Since the empty inputs from the middle are removed always keep the
        // last one empty. (So add a new one if the last one isn't empty)
        if (inputs[count - 1].value != '') {
            $container.append(makeInput());
        }
    }

    // Update the names of the inputs
    var newInputs = $container.children();
    var newCount = newInputs.length;
    for (var i = 0; i < newCount; i++) {
      newInputs[i].name = "address[" + i + "]";
    }
}

updateAddressList();

</script>

